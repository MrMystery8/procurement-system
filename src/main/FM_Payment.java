
package main;

import java.io.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.*;
import java.util.Arrays;

/**
 *
 * @author ajneya
 */
public class FM_Payment extends javax.swing.JFrame {
    private DefaultTableModel tablemodel;
    private FinanceManager user;


    public FM_Payment(FinanceManager manager) {
        this.user = manager;
        initComponents();
        usernamedisplay.setText("User: " + user.FName + " " + user.LName);
        roledisplay.setText("Role: " + user.userRole);

    String[] columnNames = {"PO ID", "Sup ID", "PM ID", "Day", "Month", "Year", "Date Created", "Status", "Total Cost", "Items"};
        tablemodel = new DefaultTableModel(columnNames, 0);
        UserTable.setModel(tablemodel);

        loadPOs();
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LeftSide = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        usernamedisplay = new javax.swing.JLabel();
        roledisplay = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        RightSide = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        tfPOID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfItem = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tfStatus = new javax.swing.JTextField();
        tfTotalCost = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btnPay = new java.awt.Button();
        btnClear = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LeftSide.setBackground(new java.awt.Color(0, 0, 153));
        LeftSide.setMinimumSize(new java.awt.Dimension(200, 500));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/image (2).png"))); // NOI18N
        jLabel5.setAlignmentY(0.0F);
        jLabel5.setIconTextGap(0);
        jLabel5.setMinimumSize(new java.awt.Dimension(188, 188));
        jLabel5.setName(""); // NOI18N
        jLabel5.setPreferredSize(new java.awt.Dimension(188, 188));

        btnLogout.setBackground(new java.awt.Color(0, 0, 153));
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/logoutwhite64.png"))); // NOI18N
        btnLogout.setToolTipText("Logout");
        btnLogout.setMinimumSize(new java.awt.Dimension(50, 50));
        btnLogout.setPreferredSize(new java.awt.Dimension(60, 60));
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        usernamedisplay.setBackground(new java.awt.Color(255, 255, 255));
        usernamedisplay.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        usernamedisplay.setForeground(new java.awt.Color(255, 255, 255));
        usernamedisplay.setText("HI");

        roledisplay.setBackground(new java.awt.Color(255, 255, 255));
        roledisplay.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roledisplay.setForeground(new java.awt.Color(255, 255, 255));
        roledisplay.setText("HI");

        btnBack.setBackground(new java.awt.Color(0, 0, 153));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/undo.png"))); // NOI18N
        btnBack.setToolTipText("Go back");
        btnBack.setMinimumSize(new java.awt.Dimension(50, 50));
        btnBack.setPreferredSize(new java.awt.Dimension(60, 60));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LeftSideLayout = new javax.swing.GroupLayout(LeftSide);
        LeftSide.setLayout(LeftSideLayout);
        LeftSideLayout.setHorizontalGroup(
            LeftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
            .addGroup(LeftSideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LeftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LeftSideLayout.createSequentialGroup()
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addComponent(roledisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usernamedisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        LeftSideLayout.setVerticalGroup(
            LeftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftSideLayout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(usernamedisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(roledisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(LeftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        RightSide.setBackground(new java.awt.Color(255, 255, 255));
        RightSide.setPreferredSize(new java.awt.Dimension(600, 500));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("PO PAYMENT");

        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        UserTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                UserTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(UserTable);

        tfPOID.setBackground(new java.awt.Color(240, 255, 255));
        tfPOID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tfPOID.setForeground(new java.awt.Color(51, 51, 51));
        tfPOID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfPOID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPOIDActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(51, 51, 51));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("PO ID");

        tfItem.setBackground(new java.awt.Color(240, 255, 255));
        tfItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tfItem.setForeground(new java.awt.Color(51, 51, 51));
        tfItem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfItemActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Item/Qty/Cost");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Status");

        tfStatus.setBackground(new java.awt.Color(240, 255, 255));
        tfStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tfStatus.setForeground(new java.awt.Color(51, 51, 51));
        tfStatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfStatusActionPerformed(evt);
            }
        });

        tfTotalCost.setBackground(new java.awt.Color(240, 255, 255));
        tfTotalCost.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tfTotalCost.setForeground(new java.awt.Color(51, 51, 51));
        tfTotalCost.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tfTotalCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTotalCostActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("Total Cost");

        btnPay.setActionCommand("Pay");
        btnPay.setBackground(new java.awt.Color(0, 0, 153));
        btnPay.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPay.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        btnPay.setForeground(new java.awt.Color(255, 255, 255));
        btnPay.setLabel("Pay");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        btnClear.setActionCommand("Clear");
        btnClear.setBackground(new java.awt.Color(0, 0, 153));
        btnClear.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnClear.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setLabel("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RightSideLayout = new javax.swing.GroupLayout(RightSide);
        RightSide.setLayout(RightSideLayout);
        RightSideLayout.setHorizontalGroup(
            RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightSideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(RightSideLayout.createSequentialGroup()
                        .addGroup(RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RightSideLayout.createSequentialGroup()
                                .addGroup(RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(RightSideLayout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfPOID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tfTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addGroup(RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnPay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(RightSideLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(373, 373, 373)
                                .addGroup(RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfItem, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(RightSideLayout.createSequentialGroup()
                                .addGap(192, 192, 192)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        RightSideLayout.setVerticalGroup(
            RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightSideLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfPOID, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(tfItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(tfTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(tfStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(LeftSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RightSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LeftSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(RightSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void loadPOs() {
    tablemodel.setRowCount(0); // Clear existing data

    String[] poLines = user.getAllPO(); // Retrieve all POs
    System.out.println("Debug: Number of POs retrieved = " + poLines.length);

    for (String line : poLines) {
        try {
            PO po = parsePOFromString(line);
            if (po == null) continue;

            
            if (po.getStatus() != null && "Approved,(NotPaid)".equalsIgnoreCase(po.getStatus().trim())) {
                String itemsInfo = formatPOItems(po.getPoItems());

                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                String formattedDate = po.getDateCreated().format(formatter);

                Object[] rowData = {
                    po.getPoID(),             
                    po.getSupplierID(),       
                    po.getPurchaseManagerID(),
                    po.getDay(),              
                    po.getMonth(),            
                    po.getYear(),             
                    formattedDate,            
                    po.getStatus(),           
                    String.format("%.1f", po.getPoTotal()), // Ensure one decimal point
                    itemsInfo                 
                };

                tablemodel.addRow(rowData);
                System.out.println("Debug: Added row for PO ID: " + po.getPoID()); // Debug log
            }
        } catch (Exception e) {
            System.err.println("Error processing PO: " + e.getMessage());
        }
    }

    System.out.println("TableModel Row Count: " + tablemodel.getRowCount()); // Verify rows added
    UserTable.revalidate();
    UserTable.repaint();
}
    private String formatPOItems(ArrayList<POItem> items) {
    StringBuilder sb = new StringBuilder();
    for (POItem item : items) {
        sb.append("ID: ").append(item.getItemID())
          .append(", Qty: ").append(item.getQuantity())
          .append(", Cost: ").append(String.format("%.2f", item.getUnitCost()))
          .append("; ");
    }
    return sb.length() > 0 ? sb.substring(0, sb.length() - 2) : ""; // Remove trailing "; "
}
    
    private PO parsePOFromString(String line) {
    try {
        String[] parts = line.split(";");
        String poId = parts[0];
        String supplierId = parts[1];
        String purchaseManagerId = parts[2];
        int day = Integer.parseInt(parts[3]);
        int month = Integer.parseInt(parts[4]);
        int year = Integer.parseInt(parts[5]);

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate dateCreated = LocalDate.parse(parts[6], formatter);

        String status = parts[7];
        double poTotal = Double.parseDouble(parts[8]); // Parse total cost

        ArrayList<POItem> poItems = new ArrayList<>();
        if (parts.length > 9) {
            String[] items = parts[9].split(",");
            for (String itemStr : items) {
                String[] itemParts = itemStr.split(":");
                if (itemParts.length == 3) {
                    poItems.add(new POItem(itemParts[0], Integer.parseInt(itemParts[1]), Double.parseDouble(itemParts[2])));
                }
            }
        }

        return new PO(poId, supplierId, purchaseManagerId, day, month, year, dateCreated, poItems, status);
    } catch (Exception e) {
        System.err.println("Error parsing PO: " + e.getMessage());
        return null;
    }
}
    
     private void processPayment() {
        int selectedRow = UserTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a PO to process payment.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String poID = tablemodel.getValueAt(selectedRow, 0).toString();
        String supplierID = tablemodel.getValueAt(selectedRow, 1).toString();
        double totalCost = Double.parseDouble(tablemodel.getValueAt(selectedRow, 8).toString());
        ArrayList<POItem> items = user.parsePOItems(tablemodel.getValueAt(selectedRow, 9).toString());

        String result = user.processPaymentAndUpdateStock(poID, supplierID, totalCost, items);
        JOptionPane.showMessageDialog(this, result);
        loadPOs(); // Refresh table
    }
     
     private void clearFields() {
        tfPOID.setText("");
        tfItem.setText("");
        tfStatus.setText("");
        tfTotalCost.setText("");
    }
    
     private void applyFilter() {
    String poID = tfPOID.getText().trim();
    String status = tfStatus.getText().trim();
    String totalCost = tfTotalCost.getText().trim();
    String items = tfItem.getText().trim();

    ArrayList<RowFilter<Object, Object>> filters = new ArrayList<>();

    // Add individual filters based on input
    if (!poID.isEmpty()) {
        filters.add(RowFilter.regexFilter("(?i)" + poID, 0)); // PO ID
    }
    if (!status.isEmpty()) {
        filters.add(RowFilter.regexFilter("(?i)" + status, 7)); // Status
    }
    if (!totalCost.isEmpty()) {
        filters.add(RowFilter.regexFilter("(?i)" + totalCost, 8)); // Total Cost
    }
    if (!items.isEmpty()) {
        filters.add(RowFilter.regexFilter("(?i)" + items, 9)); // Items
    }

    // Combine filters
    TableRowSorter<TableModel> sorter = new TableRowSorter<>(tablemodel);
    UserTable.setRowSorter(sorter);

    if (!filters.isEmpty()) {
        RowFilter<Object, Object> combinedFilter = RowFilter.andFilter(filters);
        sorter.setRowFilter(combinedFilter);
    } else {
        sorter.setRowFilter(null); // Clear filter if no inputs
    }
}
     
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        user.Logout();
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        FM_DashBoard dashboard = new FM_DashBoard(user);
        dashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void UserTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserTableMouseReleased
       int selectedRow = UserTable.getSelectedRow();
    if (selectedRow != -1) {
        
        String poID = tablemodel.getValueAt(selectedRow, 0).toString();       
        String status = tablemodel.getValueAt(selectedRow, 7).toString();     
        String totalCost = tablemodel.getValueAt(selectedRow, 8).toString();  
        String items = tablemodel.getValueAt(selectedRow, 9).toString();      

        
        tfPOID.setText(poID);
        tfStatus.setText(status);
        tfTotalCost.setText(totalCost);
        tfItem.setText(items);

        System.out.println("Selected PO ID: " + poID);
    }
    }//GEN-LAST:event_UserTableMouseReleased

    private void tfPOIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPOIDActionPerformed

        applyFilter();
    }//GEN-LAST:event_tfPOIDActionPerformed

    private void tfItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfItemActionPerformed

        applyFilter();
    }//GEN-LAST:event_tfItemActionPerformed

    private void tfStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfStatusActionPerformed

        applyFilter();
    }//GEN-LAST:event_tfStatusActionPerformed

    private void tfTotalCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTotalCostActionPerformed

        applyFilter();
    }//GEN-LAST:event_tfTotalCostActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
      int selectedRow = UserTable.getSelectedRow();
    
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a PO to process payment.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // Extract selected PO details from the table
        String poID = tablemodel.getValueAt(selectedRow, 0).toString();
        String supplierID = tablemodel.getValueAt(selectedRow, 1).toString();
        double totalCost = Double.parseDouble(tablemodel.getValueAt(selectedRow, 8).toString());
        String itemsString = tablemodel.getValueAt(selectedRow, 9).toString();

        // Parse items using the parsePOItems method in FinanceManager
        ArrayList<POItem> items = user.parsePOItems(itemsString);
        
        // Call FinanceManager to process payment and update stock
        String result = user.processPaymentAndUpdateStock(poID, supplierID, totalCost, items);

        // Update the table view and notify the user
        JOptionPane.showMessageDialog(this, result, "Payment Successful", JOptionPane.INFORMATION_MESSAGE);
        loadPOs(); // Reload the POs table to reflect the updated status

    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Invalid number format in table data.", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error processing payment: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace(); // Debugging purpose
    }
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LeftSide;
    private javax.swing.JPanel RightSide;
    private javax.swing.JTable UserTable;
    private javax.swing.JButton btnBack;
    private java.awt.Button btnClear;
    private javax.swing.JButton btnLogout;
    private java.awt.Button btnPay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel roledisplay;
    private javax.swing.JTextField tfItem;
    private javax.swing.JTextField tfPOID;
    private javax.swing.JTextField tfStatus;
    private javax.swing.JTextField tfTotalCost;
    private javax.swing.JLabel usernamedisplay;
    // End of variables declaration//GEN-END:variables
}
